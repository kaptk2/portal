Requires
----------------------------------------
PHP >= 5.5.0
UniFi >= 4.6.0

Ubiquiti UniFi External Portal Example
----------------------------------------
The provided example of authorizing guests on the UniFi controller had 
some minor issues. First and for most was the the fact that it relied 
on an external script. This is a deal breaker for users that are on 
cheap shared hosting that has functions PHP's exec disabled for 
security purposes. It also is not a good idea to call out to external 
scripts from the internet at large due to the security implications. 
This is a pure PHP solution and just requires that the curl module is 
installed for PHP.

Forked and little bit reworked version
-----------------------------------------
Blogpost about UniFi External Captive Portal research 
  * https://blog.alan.lt/2021/02/first-look-on-unifi-wireless-access.html
  * https://github.com/alan-lt/unifi-guest-portal
Main functions
  * Users in SQL
  * Users in LDAP (Google Workspace)
  * AdminLTE Template

Files
-----------------------------------------
There are two examples included.
  * Simple is most basic form, this can be used as a jumping off point
    to making your own more complex portal.
  * SQL contains a way to store uses in an external database using
    sqlite. It is written using PDO so switching database types is
    trivial.

Installation
-----------------------------------------
For the simple example just edit the authorize.php file and enter in
your UniFi controller details. You can change the index.php file as you
see fit. Just leave the php at the top of the file alone.

For the SQL example in addtion to editing index.php you will need to
edit config.php. The config settings are all at the top of the file. To
initilize a database just visit the /manager section and a database will
be created for you, assuming the web server has write permission to the
database folder.

How it works
-----------------------------------------
The code is pretty straight forward. The initial page captures the GET
variables passed by the unifi controller and stores them as PHP session
variables. The core functionality of the interacts with the unifi
controller API using CURL. Once the CURL post is made it sleeps for a
short while to give time for the controller to authorize the client then
redirects the client to their original destination.

Bugs
-----------------------------------------
Please report any bugs or enhancements to:
https://github.com/kaptk2/portal

License
-----------------------------------------

Copyright (c) 2015, Andrew Niemantsverdriet
All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met: 

1. Redistributions of source code must retain the above copyright notice, this
   list of conditions and the following disclaimer. 
2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution. 

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

The views and conclusions contained in the software and documentation are those
of the authors and should not be interpreted as representing official policies, 
either expressed or implied, of the FreeBSD Project.
